// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
	@include inline-flex(none, none, center); // For form validation feedback
	position : relative;
	
	// Bring the "active" form control to the top of surrounding elements
	
	// Bring the custom file input above the label
	
	// Custom file inputs have more complex markup, thus requiring different
	// border-radius overrides.
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
	display : flex;
	
	// Ensure buttons are always above inputs for more visually pleasing borders.
	// This isn't needed for `.input-group-text` since it shares the same border-color
	// as our inputs.
	.btn {
		position : relative;
		z-index  : 2;
		
		&:focus {
			z-index : 3;
		}
	}
	
}

.input-group-prepend { margin-right : -$input-border-width; }

.input-group-append { margin-left : -$input-border-width; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.


// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.


